@import "compass/css3";

// sprites
$icons: sprite-map("icons/*.png", $spacing: 10px);


// responsive
@mixin respond-to($media) {
  @if $media == step1 {
    @media only screen and (max-width: 1000px) { @content; }
  }
  @else if $media == step2 {
    @media only screen and (max-width: 840px) { @content; }
  }
  @else if $media == step3 {
    @media only screen and (max-width: 680px) { @content; }
  }
  @else if $media == step4 {
    @media only screen and (max-width: 460px) { @content; }
  }
  @else if $media == step5 {  
    @media only screen and (max-width: 320px) { @content; }
  }
}

@mixin retina{
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
    @content;
  }
}

/* BACKGROUND SIZE */
@mixin background-size($width: 100%, $height: 100%) {
     -moz-background-size: $width $height;
  -webkit-background-size: $width $height;
          background-size: $width $height;
}
/* ROTATE*/
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
     -moz-transform: rotate($deg + deg);
       -o-transform: rotate($deg + deg);
  -webkit-transform: rotate($deg + deg);
      -ms-transform: rotate($deg + deg);
          transform: rotate($deg + deg);
             filter: progid:DXImageTransform.Microsoft.Matrix(
                     M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand');
               zoom: 1;
}

/* TRANSITION */
@mixin transition($what: all, $length: 0.2s, $easing: ease-in-out) {
    -moz-transition:    $what $length $easing;
    -o-transition:      $what $length $easing;
    -webkit-transition: $what $length $easing;
    -ms-transition:     $what $length $easing;
    transition:         $what $length $easing;
}

@mixin animation($what: all, $length: 0.2s, $easing: ease-in-out, $iteration:infinite, $fillmode:none) {
    -moz-animatiom:    $what $length $easing 0s $iteration normal $fillmode;
    -webkit-animation: $what $length $easing 0s $iteration normal $fillmode;
    -o-animation:      $what $length $easing 0s $iteration normal $fillmode;
    animation:         $what $length $easing 0s $iteration normal $fillmode;
}
// image replacement
@mixin hide-text{
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}
@mixin clr{
  &:after{
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
    }
}
@mixin image-size($path){
  width: image-width($path);
  height: image-height($path);
}
@mixin sized-sprite($map, $sprite){
  background: sprite($map, $sprite) no-repeat;
  @include image-size(sprite-file($map, $sprite));
}